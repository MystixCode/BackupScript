#!/bin/bash

scriptdir=$(dirname "$(realpath "$0")")
backup_suffix="backup_$(date +%Y-%m-%d_%H-%M-%S)/"
dry_run_mode=false
default_src="$HOME/"
default_dst="/media/$USER/backup/"
default_exclude_list="$scriptdir/IgnoreList.txt"
default_retention=5

echo -e "###################\n## Backup Script ##\n###################"

usage(){
    echo -e "Usage: $0 [options]"
    echo -e "Backup from source to destinations with backup retention"
    echo ""
    echo "-h        --help                    Display help"
    echo "-d        --dry-run                 Perform a trial run with no changes"
    echo "-e        --exclude                 Exclude list file."
    echo "-r        --retention <num>         Set number of backup versions to retain"
    echo "          --src                     Set source directory"
    echo "          --dst                     Set destination directory"
    echo "          --use-defaults            Run with default values"
    exit 0
}

while [[ "$#" -gt 0 ]]; do
    case "$1" in
        -h|--help) usage ;;
        -d|--dry-run) dry_run_mode=true ;;
        -e|--exclude) exclude_list="$2"; shift ;;
        -r|--retention) retention="$2"; shift ;;
        --src) src="$2"; shift ;;
        --dst) dst="$2"; shift ;;
        --use-defaults) src=$default_src; dst=$default_dst; exclude_list=$default_exclude_list; retention=$default_retention ;;
        *) echo "Unknown option: $1"; usage ;;
    esac
    shift
done

if [[ -z "$src" || -z "$dst" ]]; then
    echo "Error: Both --src and --dst are required unless --use-defaults is set."
    usage
    exit 1
fi

start=$(date +%s)
echo "Script start: $(date)"

src="${src%/}/"
dst="${dst%/}/"

backup_path="$dst$backup_suffix"
rsync_opts="--archive --verbose --human-readable"

if [[ ! -d "$src" ]]; then
    echo -e "Error: Source directory $src does not exist."
    exit 1
fi

if [[ ! -d "$dst" ]]; then
    echo -e "Error: Destination directory $dst does not exist."
    exit 1
fi

if [ ! -z "$exclude_list" ]; then
    if [[ ! -f "$exclude_list" ]]; then
        echo -e "Error: Exclude list $exclude_list does not exist."
        exit 1
    fi
    rsync_opts+=" --exclude-from=$exclude_list"
fi

if [ $dry_run_mode == true ]; then
    rsync_opts+=" --dry-run"
else
    mkdir -p "$backup_path"
    log_file="${backup_path}backup.log"
    touch "$log_file"
    exec > >(tee -a "$log_file") 2>&1
fi

rsync $rsync_opts "$src" "$backup_path"

if [[ $? -eq 0 ]]; then
    echo -e "Backup completed successfully."
else
    echo -e "ERROR: Backup failed."
    exit 1
fi

if [[ "$retention" =~ ^[0-9]+$ ]]; then
    backup_count=$(find "$dst" -maxdepth 1 -type d -name "backup_*" | wc -l)
    if [[ "$backup_count" -ge "$retention" ]]; then

      # Because in dry run there is no new backup
      if [[ $dry_run_mode == true ]]; then
         ((retention--))
      fi
       old_backups=$(find "$dst" -maxdepth 1 -type d -name "backup_*" | sort | head -n -$retention )
        if [[ -n "$old_backups" ]]; then
            echo "The following old backups will be deleted:"
            echo "$old_backups"

            if [[ $dry_run_mode == true ]]; then
                echo "Retention dry-run"
            else
                echo "$old_backups" | xargs rm -rf
                echo "Old backups deleted."
            fi
        else
            echo "Error: Old backups not deleted."
        fi
    fi
fi
end=$(date +%s)
echo "Script end: $(date)"
duration_in_seconds=$(($end - $start))
days=$((duration_in_seconds / 86400))
hours=$(( (duration_in_seconds % 86400) / 3600 ))
minutes=$(( (duration_in_seconds % 3600) / 60 ))
seconds=$((duration_in_seconds % 60))

# Output the result
echo "Duration: $days days, $hours hours, $minutes minutes, $seconds seconds"
